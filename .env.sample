# LLM provider
# If you want to use Azure OpenAI, set the following variables.
# It requires setting up an Azure OpenAI instance with these deployments:
# - gpt-4o
# - gpt-4o-mini
# - text-embedding-3-small
# For more information, see:
# https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/create-resource?tabs=portal
OPENAI_API_VERSION=
AZURE_OPENAI_API_KEY=
AZURE_OPENAI_ENDPOINT=
# If you want to use OpenAI, you just need an OpenAI API key.
OPENAI_API_KEY=

# Scientific papers databases
EXA_API_KEY=
SERPER_API_KEY=

# Langsmith API key (Optional)
# Add agent tracing and monitoring
LANGCHAIN_API_KEY=

# Redis URL
# Cache for tool results
# Set to default for Docker deployment
REDIS_URL="redis://redis:6379"

# Database
# Postgres instance storing previous research, papers, and user data
# Set to default for Docker deployment
DATABASE_URL="postgresql://postgres:postgres@postgres:5432/postgres?schema=public"

# Frontend and API URLs 
# Default for Docker deployment
FRONTEND_URL="http://localhost:3000"
NEXT_PUBLIC_WS_URL="ws://localhost:8000"
NEXT_PUBLIC_API_URL="http://backend:8000"

# Auth
# Default for Docker deployment
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET=
# Azure AD, now Microsoft Entra (Optional)
# To enable Microsoft login, set the following variables.
# You need to create an Azure AD app and set the following variables.
# For more information, see:
# https://learn.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app
AZURE_AD_CLIENT_ID=
AZURE_AD_CLIENT_SECRET=

# Azure Key Vault
NEXT_PUBLIC_AZURE_KEY_VAULT_URL=
# When running Docker locally, you'll also need to set these variables.
# You can get them by registering your app on Azure.
AZURE_TENANT_ID=
AZURE_CLIENT_ID=
AZURE_CLIENT_SECRET=
